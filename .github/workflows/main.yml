name: Build and Push Frontend Image

# Draai deze workflow bij elke push naar de main branch
# en bij elke pull request die naar de main branch target
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Gebruik de laatste stabiele Ubuntu runner

    # Permissies die nodig zijn voor de GITHUB_TOKEN om naar ghcr.io te pushen
    permissions:
      contents: read      # Om de repo te kunnen checkouten
      packages: write     # Om images te kunnen pushen naar ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Gebruik de laatste versie van de checkout actie

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Gebruik de laatste versie

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3 # Gebruik de laatste versie
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # De gebruiker die de workflow triggert (of repo owner)
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN wordt automatisch aangemaakt

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5 # Gebruik de laatste versie
        with:
          images: ghcr.io/${{ github.repository_owner }}/horizon-frontend # Pas 'horizon-frontend' aan als je image anders heet

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Gebruik de laatste versie
        with:
          context: . # De Dockerfile staat in de root van de repo
          file: ./Dockerfile # Expliciet pad naar Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Alleen pushen als het geen pull request is (dus bij merge naar main)
          tags: ${{ steps.meta.outputs.tags }} # Gebruik de tags gegenereerd door metadata-action (bijv. latest, git sha)
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha # Gebruik GitHub Actions cache voor Docker layers
          cache-to: type=gha,mode=max